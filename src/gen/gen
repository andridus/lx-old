module gen

import ast

pub enum Backend {
	elixir
	erlang
	vlang
}

pub fn generate_ast(stmt ast.Stmt, backend Backend) string {
	main_node := stmt.get_op() or { panic("operator invalid Statement error") }
	left_node := stmt.get_ident().expression_node()
	right_node := stmt.get_expr().expression_node()

	return match backend {
		.elixir { generate_ast_elixir(main_node, left_node, right_node) }
		else { 'not-defined-backend' }
	}
}
